/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UsdtSwapPool,
  UsdtSwapPoolInterface,
} from "../../src/UsdtSwapPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "SubReserve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdtIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenOut",
        type: "uint256",
      },
    ],
    name: "getUsdtIn",
    outputs: [
      {
        internalType: "uint256",
        name: "usdtIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdt",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxOutLock",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchasableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "purchasable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint112",
        name: "_newMaxOut",
        type: "uint112",
      },
    ],
    name: "setMaxOutLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint112",
        name: "_newPrice",
        type: "uint112",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "subReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapAccountsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "swapCountOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061220e806100696000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c8063c0c53b8b116100a2578063dd9046ec11610071578063dd9046ec1461027f578063e09d22041461029d578063e2fdf807146102cd578063f5a1f5b4146102eb578063fc0c546a146103075761010a565b8063c0c53b8b1461020d578063c45a015514610229578063cd54223314610247578063d3986f08146102635761010a565b80638da5cb5b116100de5780638da5cb5b14610197578063a035b1fe146101b5578063a4bff26f146101d3578063b3863bf9146101ef5761010a565b8062867dcb1461010f57806302c7e7af1461013f5780632f48ab7d1461015d578063460e26dc1461017b575b600080fd5b61012960048036038101906101249190611612565b610325565b6040516101369190611658565b60405180910390f35b61014761033d565b6040516101549190611658565b60405180910390f35b610165610343565b6040516101729190611682565b60405180910390f35b610195600480360381019061019091906116e3565b610369565b005b61019f610431565b6040516101ac9190611682565b60405180910390f35b6101bd610457565b6040516101ca919061171f565b60405180910390f35b6101ed60048036038101906101e89190611766565b610477565b005b6101f76106f4565b604051610204919061171f565b60405180910390f35b610227600480360381019061022291906117a6565b610714565b005b61023161086c565b60405161023e9190611682565b60405180910390f35b610261600480360381019061025c91906116e3565b610892565b005b61027d60048036038101906102789190611766565b61095a565b005b610287610ee0565b6040516102949190611658565b60405180910390f35b6102b760048036038101906102b291906117f9565b610ee6565b6040516102c49190611658565b60405180910390f35b6102d5610f48565b6040516102e29190611658565b60405180910390f35b61030560048036038101906103009190611612565b611061565b005b61030f611135565b60405161031c9190611682565b60405180910390f35b60056020528060005260406000206000915090505481565b60075481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090611883565b60405180910390fd5b806008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6008600e9054906101000a90046dffffffffffffffffffffffffffff1681565b61047f61115b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690611883565b60405180910390fd5b60008211610552576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610549906118ef565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105af9190611682565b602060405180830381865afa1580156105cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f09190611924565b905082811015610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c9061199d565b60405180910390fd5b6106828284600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111aa9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff00bf07ac22bd0a9c15336e9eb50657e587132bef4aa22add3431c9afba4c7cb856040516106df9190611658565b60405180910390a3506106f0611230565b5050565b600860009054906101000a90046dffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90611a09565b60405180910390fd5b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091990611883565b60405180910390fd5b80600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555050565b61096261115b565b600082116109a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099c906118ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b90611a75565b60405180910390fd5b60006008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1611610a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7a90611ae1565b60405180910390fd5b6000610a8d610f48565b905082811015610ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac990611b4d565b60405180910390fd5b6000610add84610ee6565b905080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b3b9190611682565b602060405180830381865afa158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c9190611924565b1015610bbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb490611bb9565b60405180910390fd5b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610c1b929190611bd9565b602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c9190611924565b1015610c9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9490611c4e565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610cfd5760066000815480929190610cf790611c9d565b91905055505b610d4f84600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461123a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610da78460075461123a90919063ffffffff16565b600781905550610e1e33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611250909392919063ffffffff16565b610e6b8385600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111aa9092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2a9237ff5aa599ef4c5ee4b1142b53429d5755e2685fe6288b2e3320202115f58387604051610eca929190611ce5565b60405180910390a35050610edc611230565b5050565b60065481565b6000610f41670de0b6b3a7640000610f336008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16856112d990919063ffffffff16565b6112ef90919063ffffffff16565b9050919050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fa69190611682565b602060405180830381865afa158015610fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe79190611924565b9050600060075490506000600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1690506000838211156110315783611033565b815b90508083101561105557611050838261130590919063ffffffff16565b611058565b60005b94505050505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e890611883565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002600054036111a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119790611d5a565b60405180910390fd5b6002600081905550565b61122b8363a9059cbb60e01b84846040516024016111c9929190611d7a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061131b565b505050565b6001600081905550565b600081836112489190611da3565b905092915050565b6112d3846323b872dd60e01b85858560405160240161127193929190611dd7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061131b565b50505050565b600081836112e79190611e0e565b905092915050565b600081836112fd9190611e7f565b905092915050565b600081836113139190611eb0565b905092915050565b600061137d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113e29092919063ffffffff16565b90506000815111156113dd578080602001905181019061139d9190611f1c565b6113dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d390611fbb565b60405180910390fd5b5b505050565b60606113f184846000856113fa565b90509392505050565b60608247101561143f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114369061204d565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161146891906120de565b60006040518083038185875af1925050503d80600081146114a5576040519150601f19603f3d011682016040523d82523d6000602084013e6114aa565b606091505b50915091506114bb878383876114c7565b92505050949350505050565b60608315611529576000835103611521576114e18561153c565b611520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151790612141565b60405180910390fd5b5b829050611534565b611533838361155f565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156115725781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a691906121b6565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115df826115b4565b9050919050565b6115ef816115d4565b81146115fa57600080fd5b50565b60008135905061160c816115e6565b92915050565b600060208284031215611628576116276115af565b5b6000611636848285016115fd565b91505092915050565b6000819050919050565b6116528161163f565b82525050565b600060208201905061166d6000830184611649565b92915050565b61167c816115d4565b82525050565b60006020820190506116976000830184611673565b92915050565b60006dffffffffffffffffffffffffffff82169050919050565b6116c08161169d565b81146116cb57600080fd5b50565b6000813590506116dd816116b7565b92915050565b6000602082840312156116f9576116f86115af565b5b6000611707848285016116ce565b91505092915050565b6117198161169d565b82525050565b60006020820190506117346000830184611710565b92915050565b6117438161163f565b811461174e57600080fd5b50565b6000813590506117608161173a565b92915050565b6000806040838503121561177d5761177c6115af565b5b600061178b85828601611751565b925050602061179c858286016115fd565b9150509250929050565b6000806000606084860312156117bf576117be6115af565b5b60006117cd868287016115fd565b93505060206117de868287016115fd565b92505060406117ef868287016115fd565b9150509250925092565b60006020828403121561180f5761180e6115af565b5b600061181d84828501611751565b91505092915050565b600082825260208201905092915050565b7f464f5242494444454e5f4f4e4c595f4f574e4552000000000000000000000000600082015250565b600061186d601483611826565b915061187882611837565b602082019050919050565b6000602082019050818103600083015261189c81611860565b9050919050565b7f5a45524f5f414d4f554e54000000000000000000000000000000000000000000600082015250565b60006118d9600b83611826565b91506118e4826118a3565b602082019050919050565b60006020820190508181036000830152611908816118cc565b9050919050565b60008151905061191e8161173a565b92915050565b60006020828403121561193a576119396115af565b5b60006119488482850161190f565b91505092915050565b7f494e53554646494349454e545f415641494c41424c455f544f4b454e00000000600082015250565b6000611987601c83611826565b915061199282611951565b602082019050919050565b600060208201905081810360008301526119b68161197a565b9050919050565b7f464f5242494444454e0000000000000000000000000000000000000000000000600082015250565b60006119f3600983611826565b91506119fe826119bd565b602082019050919050565b60006020820190508181036000830152611a22816119e6565b9050919050565b7f5a45524f5f414444524553530000000000000000000000000000000000000000600082015250565b6000611a5f600c83611826565b9150611a6a82611a29565b602082019050919050565b60006020820190508181036000830152611a8e81611a52565b9050919050565b7f5a45524f5f505249434500000000000000000000000000000000000000000000600082015250565b6000611acb600a83611826565b9150611ad682611a95565b602082019050919050565b60006020820190508181036000830152611afa81611abe565b9050919050565b7f494e53554646494349454e545f415641494c41424c455f505552434841534500600082015250565b6000611b37601f83611826565b9150611b4282611b01565b602082019050919050565b60006020820190508181036000830152611b6681611b2a565b9050919050565b7f494e53554646494349454e545f415641494c41424c455f555344540000000000600082015250565b6000611ba3601b83611826565b9150611bae82611b6d565b602082019050919050565b60006020820190508181036000830152611bd281611b96565b9050919050565b6000604082019050611bee6000830185611673565b611bfb6020830184611673565b9392505050565b7f494e53554646494349454e545f415050524f56455f5553445400000000000000600082015250565b6000611c38601983611826565b9150611c4382611c02565b602082019050919050565b60006020820190508181036000830152611c6781611c2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ca88261163f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611cda57611cd9611c6e565b5b600182019050919050565b6000604082019050611cfa6000830185611649565b611d076020830184611649565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611d44601f83611826565b9150611d4f82611d0e565b602082019050919050565b60006020820190508181036000830152611d7381611d37565b9050919050565b6000604082019050611d8f6000830185611673565b611d9c6020830184611649565b9392505050565b6000611dae8261163f565b9150611db98361163f565b9250828201905080821115611dd157611dd0611c6e565b5b92915050565b6000606082019050611dec6000830186611673565b611df96020830185611673565b611e066040830184611649565b949350505050565b6000611e198261163f565b9150611e248361163f565b9250828202611e328161163f565b91508282048414831517611e4957611e48611c6e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e8a8261163f565b9150611e958361163f565b925082611ea557611ea4611e50565b5b828204905092915050565b6000611ebb8261163f565b9150611ec68361163f565b9250828203905081811115611ede57611edd611c6e565b5b92915050565b60008115159050919050565b611ef981611ee4565b8114611f0457600080fd5b50565b600081519050611f1681611ef0565b92915050565b600060208284031215611f3257611f316115af565b5b6000611f4084828501611f07565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611fa5602a83611826565b9150611fb082611f49565b604082019050919050565b60006020820190508181036000830152611fd481611f98565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612037602683611826565b915061204282611fdb565b604082019050919050565b600060208201905081810360008301526120668161202a565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156120a1578082015181840152602081019050612086565b60008484015250505050565b60006120b88261206d565b6120c28185612078565b93506120d2818560208601612083565b80840191505092915050565b60006120ea82846120ad565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061212b601d83611826565b9150612136826120f5565b602082019050919050565b6000602082019050818103600083015261215a8161211e565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b600061218882612161565b6121928185611826565b93506121a2818560208601612083565b6121ab8161216c565b840191505092915050565b600060208201905081810360008301526121d0818461217d565b90509291505056fea26469706673582212204eaf5d67eb46513f6f0a5c6ecedbfddb778b3f51c5a551048a294f1eb2e44be764736f6c63430008130033";

type UsdtSwapPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsdtSwapPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UsdtSwapPool__factory extends ContractFactory {
  constructor(...args: UsdtSwapPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UsdtSwapPool> {
    return super.deploy(overrides || {}) as Promise<UsdtSwapPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UsdtSwapPool {
    return super.attach(address) as UsdtSwapPool;
  }
  override connect(signer: Signer): UsdtSwapPool__factory {
    return super.connect(signer) as UsdtSwapPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsdtSwapPoolInterface {
    return new utils.Interface(_abi) as UsdtSwapPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UsdtSwapPool {
    return new Contract(address, _abi, signerOrProvider) as UsdtSwapPool;
  }
}

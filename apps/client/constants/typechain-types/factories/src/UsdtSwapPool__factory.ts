/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UsdtSwapPool,
  UsdtSwapPoolInterface,
} from "../../src/UsdtSwapPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "SubReserve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdtIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenOut",
        type: "uint256",
      },
    ],
    name: "getUsdtIn",
    outputs: [
      {
        internalType: "uint256",
        name: "usdtIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdt",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxOutLock",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchasableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "purchasable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint112",
        name: "_newMaxOut",
        type: "uint112",
      },
    ],
    name: "setMaxOutLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint112",
        name: "_newPrice",
        type: "uint112",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "subReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapAccountsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "swapCountOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612258806100696000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c8063c0c53b8b116100a2578063dd9046ec11610071578063dd9046ec146102a8578063e09d2204146102c6578063e2fdf807146102f6578063f5a1f5b414610314578063fc0c546a1461033057610115565b8063c0c53b8b14610236578063c45a015514610252578063cd54223314610270578063d3986f081461028c57610115565b80638da5cb5b116100e95780638da5cb5b146101a2578063a035b1fe146101c0578063a4bff26f146101de578063b3863bf9146101fa578063b787c40a1461021857610115565b8062867dcb1461011a57806302c7e7af1461014a5780632f48ab7d14610168578063460e26dc14610186575b600080fd5b610134600480360381019061012f919061165c565b61034e565b60405161014191906116a2565b60405180910390f35b610152610366565b60405161015f91906116a2565b60405180910390f35b61017061036c565b60405161017d91906116cc565b60405180910390f35b6101a0600480360381019061019b919061172d565b610392565b005b6101aa61045a565b6040516101b791906116cc565b60405180910390f35b6101c8610480565b6040516101d59190611769565b60405180910390f35b6101f860048036038101906101f391906117b0565b6104a0565b005b61020261071d565b60405161020f9190611769565b60405180910390f35b61022061073d565b60405161022d91906116a2565b60405180910390f35b610250600480360381019061024b91906117f0565b610743565b005b61025a61089b565b60405161026791906116cc565b60405180910390f35b61028a6004803603810190610285919061172d565b6108c1565b005b6102a660048036038101906102a191906117b0565b610989565b005b6102b0610f2a565b6040516102bd91906116a2565b60405180910390f35b6102e060048036038101906102db9190611843565b610f30565b6040516102ed91906116a2565b60405180910390f35b6102fe610f92565b60405161030b91906116a2565b60405180910390f35b61032e6004803603810190610329919061165c565b6110ab565b005b61033861117f565b60405161034591906116cc565b60405180910390f35b60056020528060005260406000206000915090505481565b60085481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610422576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610419906118cd565b60405180910390fd5b806009600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6009600e9054906101000a90046dffffffffffffffffffffffffffff1681565b6104a86111a5565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f906118cd565b60405180910390fd5b6000821161057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290611939565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105d891906116cc565b602060405180830381865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610619919061196e565b90508281101561065e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610655906119e7565b60405180910390fd5b6106ab8284600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111f49092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff00bf07ac22bd0a9c15336e9eb50657e587132bef4aa22add3431c9afba4c7cb8560405161070891906116a2565b60405180910390a35061071961127a565b5050565b600960009054906101000a90046dffffffffffffffffffffffffffff1681565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca90611a53565b60405180910390fd5b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610951576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610948906118cd565b60405180910390fd5b80600960006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555050565b6109916111a5565b600082116109d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cb90611939565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611abf565b60405180910390fd5b60006009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1611610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa990611b2b565b60405180910390fd5b6000610abc610f92565b905082811015610b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af890611b97565b60405180910390fd5b6000610b0c84610f30565b905080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b6a91906116cc565b602060405180830381865afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab919061196e565b1015610bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be390611c03565b60405180910390fd5b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610c4a929190611c23565b602060405180830381865afa158015610c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8b919061196e565b1015610ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc390611c98565b60405180910390fd5b610d1e84600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128490919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d768460065461128490919063ffffffff16565b600681905550610d918460085461128490919063ffffffff16565b6008819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610df75760076000815480929190610df190611ce7565b91905055505b610e6833600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661129a909392919063ffffffff16565b610eb58385600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111f49092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2a9237ff5aa599ef4c5ee4b1142b53429d5755e2685fe6288b2e3320202115f58387604051610f14929190611d2f565b60405180910390a35050610f2661127a565b5050565b60075481565b6000610f8b670de0b6b3a7640000610f7d6009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168561132390919063ffffffff16565b61133990919063ffffffff16565b9050919050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ff091906116cc565b602060405180830381865afa15801561100d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611031919061196e565b9050600060085490506000600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16905060008382111561107b578361107d565b815b90508083101561109f5761109a838261134f90919063ffffffff16565b6110a2565b60005b94505050505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461113b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611132906118cd565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002600054036111ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e190611da4565b60405180910390fd5b6002600081905550565b6112758363a9059cbb60e01b8484604051602401611213929190611dc4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611365565b505050565b6001600081905550565b600081836112929190611ded565b905092915050565b61131d846323b872dd60e01b8585856040516024016112bb93929190611e21565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611365565b50505050565b600081836113319190611e58565b905092915050565b600081836113479190611ec9565b905092915050565b6000818361135d9190611efa565b905092915050565b60006113c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661142c9092919063ffffffff16565b905060008151111561142757808060200190518101906113e79190611f66565b611426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141d90612005565b60405180910390fd5b5b505050565b606061143b8484600085611444565b90509392505050565b606082471015611489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148090612097565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114b29190612128565b60006040518083038185875af1925050503d80600081146114ef576040519150601f19603f3d011682016040523d82523d6000602084013e6114f4565b606091505b509150915061150587838387611511565b92505050949350505050565b6060831561157357600083510361156b5761152b85611586565b61156a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115619061218b565b60405180910390fd5b5b82905061157e565b61157d83836115a9565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156115bc5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f09190612200565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611629826115fe565b9050919050565b6116398161161e565b811461164457600080fd5b50565b60008135905061165681611630565b92915050565b600060208284031215611672576116716115f9565b5b600061168084828501611647565b91505092915050565b6000819050919050565b61169c81611689565b82525050565b60006020820190506116b76000830184611693565b92915050565b6116c68161161e565b82525050565b60006020820190506116e160008301846116bd565b92915050565b60006dffffffffffffffffffffffffffff82169050919050565b61170a816116e7565b811461171557600080fd5b50565b60008135905061172781611701565b92915050565b600060208284031215611743576117426115f9565b5b600061175184828501611718565b91505092915050565b611763816116e7565b82525050565b600060208201905061177e600083018461175a565b92915050565b61178d81611689565b811461179857600080fd5b50565b6000813590506117aa81611784565b92915050565b600080604083850312156117c7576117c66115f9565b5b60006117d58582860161179b565b92505060206117e685828601611647565b9150509250929050565b600080600060608486031215611809576118086115f9565b5b600061181786828701611647565b935050602061182886828701611647565b925050604061183986828701611647565b9150509250925092565b600060208284031215611859576118586115f9565b5b60006118678482850161179b565b91505092915050565b600082825260208201905092915050565b7f464f5242494444454e5f4f4e4c595f4f574e4552000000000000000000000000600082015250565b60006118b7601483611870565b91506118c282611881565b602082019050919050565b600060208201905081810360008301526118e6816118aa565b9050919050565b7f5a45524f5f414d4f554e54000000000000000000000000000000000000000000600082015250565b6000611923600b83611870565b915061192e826118ed565b602082019050919050565b6000602082019050818103600083015261195281611916565b9050919050565b60008151905061196881611784565b92915050565b600060208284031215611984576119836115f9565b5b600061199284828501611959565b91505092915050565b7f494e53554646494349454e545f415641494c41424c455f544f4b454e00000000600082015250565b60006119d1601c83611870565b91506119dc8261199b565b602082019050919050565b60006020820190508181036000830152611a00816119c4565b9050919050565b7f464f5242494444454e0000000000000000000000000000000000000000000000600082015250565b6000611a3d600983611870565b9150611a4882611a07565b602082019050919050565b60006020820190508181036000830152611a6c81611a30565b9050919050565b7f5a45524f5f414444524553530000000000000000000000000000000000000000600082015250565b6000611aa9600c83611870565b9150611ab482611a73565b602082019050919050565b60006020820190508181036000830152611ad881611a9c565b9050919050565b7f5a45524f5f505249434500000000000000000000000000000000000000000000600082015250565b6000611b15600a83611870565b9150611b2082611adf565b602082019050919050565b60006020820190508181036000830152611b4481611b08565b9050919050565b7f494e53554646494349454e545f415641494c41424c455f505552434841534500600082015250565b6000611b81601f83611870565b9150611b8c82611b4b565b602082019050919050565b60006020820190508181036000830152611bb081611b74565b9050919050565b7f494e53554646494349454e545f415641494c41424c455f555344540000000000600082015250565b6000611bed601b83611870565b9150611bf882611bb7565b602082019050919050565b60006020820190508181036000830152611c1c81611be0565b9050919050565b6000604082019050611c3860008301856116bd565b611c4560208301846116bd565b9392505050565b7f494e53554646494349454e545f415050524f56455f5553445400000000000000600082015250565b6000611c82601983611870565b9150611c8d82611c4c565b602082019050919050565b60006020820190508181036000830152611cb181611c75565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cf282611689565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d2457611d23611cb8565b5b600182019050919050565b6000604082019050611d446000830185611693565b611d516020830184611693565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611d8e601f83611870565b9150611d9982611d58565b602082019050919050565b60006020820190508181036000830152611dbd81611d81565b9050919050565b6000604082019050611dd960008301856116bd565b611de66020830184611693565b9392505050565b6000611df882611689565b9150611e0383611689565b9250828201905080821115611e1b57611e1a611cb8565b5b92915050565b6000606082019050611e3660008301866116bd565b611e4360208301856116bd565b611e506040830184611693565b949350505050565b6000611e6382611689565b9150611e6e83611689565b9250828202611e7c81611689565b91508282048414831517611e9357611e92611cb8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ed482611689565b9150611edf83611689565b925082611eef57611eee611e9a565b5b828204905092915050565b6000611f0582611689565b9150611f1083611689565b9250828203905081811115611f2857611f27611cb8565b5b92915050565b60008115159050919050565b611f4381611f2e565b8114611f4e57600080fd5b50565b600081519050611f6081611f3a565b92915050565b600060208284031215611f7c57611f7b6115f9565b5b6000611f8a84828501611f51565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611fef602a83611870565b9150611ffa82611f93565b604082019050919050565b6000602082019050818103600083015261201e81611fe2565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612081602683611870565b915061208c82612025565b604082019050919050565b600060208201905081810360008301526120b081612074565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156120eb5780820151818401526020810190506120d0565b60008484015250505050565b6000612102826120b7565b61210c81856120c2565b935061211c8185602086016120cd565b80840191505092915050565b600061213482846120f7565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612175601d83611870565b91506121808261213f565b602082019050919050565b600060208201905081810360008301526121a481612168565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006121d2826121ab565b6121dc8185611870565b93506121ec8185602086016120cd565b6121f5816121b6565b840191505092915050565b6000602082019050818103600083015261221a81846121c7565b90509291505056fea26469706673582212206c80508ea64aa5c07dbd29a2c9c90f25c06ac1c41dae5ff730375e7df079dd6864736f6c63430008130033";

type UsdtSwapPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsdtSwapPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UsdtSwapPool__factory extends ContractFactory {
  constructor(...args: UsdtSwapPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UsdtSwapPool> {
    return super.deploy(overrides || {}) as Promise<UsdtSwapPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UsdtSwapPool {
    return super.attach(address) as UsdtSwapPool;
  }
  override connect(signer: Signer): UsdtSwapPool__factory {
    return super.connect(signer) as UsdtSwapPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsdtSwapPoolInterface {
    return new utils.Interface(_abi) as UsdtSwapPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UsdtSwapPool {
    return new Contract(address, _abi, signerOrProvider) as UsdtSwapPool;
  }
}

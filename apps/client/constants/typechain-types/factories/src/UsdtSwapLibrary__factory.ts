/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UsdtSwapLibrary,
  UsdtSwapLibraryInterface,
} from "../../src/UsdtSwapLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenOut",
        type: "uint256",
      },
    ],
    name: "getUsdtIn",
    outputs: [
      {
        internalType: "uint256",
        name: "usdtIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "purchasableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "purchasable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61062f610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063443f4e711461004557806398390dab14610075575b600080fd5b61005f600480360381019061005a919061035f565b6100a5565b60405161006c91906103a5565b60405180910390f35b61008f600480360381019061008a91906103ec565b6101e1565b60405161009c91906103a5565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa1580156100f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101189190610441565b9150915060008473ffffffffffffffffffffffffffffffffffffffff1663b3863bf96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018d91906104c7565b6dffffffffffffffffffffffffffff1690506000838211156101af57836101b1565b815b9050808310156101d3576101ce83826102ba90919063ffffffff16565b6101d6565b60005b945050505050919050565b6000808373ffffffffffffffffffffffffffffffffffffffff1663a035b1fe6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561022f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025391906104c7565b90506000816dffffffffffffffffffffffffffff16146102af576102aa670de0b6b3a764000061029c836dffffffffffffffffffffffffffff16866102d090919063ffffffff16565b6102e690919063ffffffff16565b6102b1565b825b91505092915050565b600081836102c89190610523565b905092915050565b600081836102de9190610557565b905092915050565b600081836102f491906105c8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061032c82610301565b9050919050565b61033c81610321565b811461034757600080fd5b50565b60008135905061035981610333565b92915050565b600060208284031215610375576103746102fc565b5b60006103838482850161034a565b91505092915050565b6000819050919050565b61039f8161038c565b82525050565b60006020820190506103ba6000830184610396565b92915050565b6103c98161038c565b81146103d457600080fd5b50565b6000813590506103e6816103c0565b92915050565b60008060408385031215610403576104026102fc565b5b60006104118582860161034a565b9250506020610422858286016103d7565b9150509250929050565b60008151905061043b816103c0565b92915050565b60008060408385031215610458576104576102fc565b5b60006104668582860161042c565b92505060206104778582860161042c565b9150509250929050565b60006dffffffffffffffffffffffffffff82169050919050565b6104a481610481565b81146104af57600080fd5b50565b6000815190506104c18161049b565b92915050565b6000602082840312156104dd576104dc6102fc565b5b60006104eb848285016104b2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061052e8261038c565b91506105398361038c565b9250828203905081811115610551576105506104f4565b5b92915050565b60006105628261038c565b915061056d8361038c565b925082820261057b8161038c565b91508282048414831517610592576105916104f4565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006105d38261038c565b91506105de8361038c565b9250826105ee576105ed610599565b5b82820490509291505056fea26469706673582212204428c471f7ef6fc0d474ed0cd90bea0fdfdc06d143e678b3fd6609b8cd618fae64736f6c63430008130033";

type UsdtSwapLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsdtSwapLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UsdtSwapLibrary__factory extends ContractFactory {
  constructor(...args: UsdtSwapLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UsdtSwapLibrary> {
    return super.deploy(overrides || {}) as Promise<UsdtSwapLibrary>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UsdtSwapLibrary {
    return super.attach(address) as UsdtSwapLibrary;
  }
  override connect(signer: Signer): UsdtSwapLibrary__factory {
    return super.connect(signer) as UsdtSwapLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsdtSwapLibraryInterface {
    return new utils.Interface(_abi) as UsdtSwapLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UsdtSwapLibrary {
    return new Contract(address, _abi, signerOrProvider) as UsdtSwapLibrary;
  }
}
